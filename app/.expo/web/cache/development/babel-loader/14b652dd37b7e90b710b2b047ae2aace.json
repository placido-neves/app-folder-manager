{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useContext, useCallback } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from '@react-navigation/native';\nimport ScrollFolder from \"../../Components/ScrollFolder\";\nimport { PathContext } from \"../../context/PathContext\";\nimport api from \"../../API\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Copy(_ref) {\n  var _route$params, _pathRaplace;\n\n  var route = _ref.route;\n  var navigation = useNavigation();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      dir = _useState2[0],\n      setDir = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      path = _useState4[0],\n      setPath = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      back = _useState6[0],\n      setBack = _useState6[1];\n\n  var _useContext = useContext(PathContext),\n      pathCopy = _useContext.pathCopy,\n      moveORCopy = _useContext.moveORCopy;\n\n  if ((route == null ? void 0 : (_route$params = route.params) == null ? void 0 : _route$params.folderName) === undefined) {\n    useEffect(function () {\n      api.get('/main').then(function (_ref2) {\n        var data = _ref2.data;\n        setPath(data.path);\n        api.post('/', {\n          path: data.path\n        }).then(function (_ref3) {\n          var data = _ref3.data;\n          setDir(data);\n        });\n      });\n    }, []);\n  } else {\n    useEffect(function () {\n      var _route$params2, _route$params3, _route$params4, _route$params5;\n\n      setPath((route == null ? void 0 : (_route$params2 = route.params) == null ? void 0 : _route$params2.path.path) + '/' + (route == null ? void 0 : (_route$params3 = route.params) == null ? void 0 : _route$params3.folderName.f));\n      api.post('/', {\n        path: (route == null ? void 0 : (_route$params4 = route.params) == null ? void 0 : _route$params4.path.path) + '/' + (route == null ? void 0 : (_route$params5 = route.params) == null ? void 0 : _route$params5.folderName.f)\n      }).then(function (_ref4) {\n        var data = _ref4.data;\n        setDir(data);\n      });\n    }, [path]);\n  }\n\n  var copy = useCallback(function () {\n    if (back === true) {\n      if (moveORCopy === 'copy') {\n        api.post('/copyFolder', {\n          source: pathCopy,\n          dest: path\n        });\n      }\n\n      if (moveORCopy === 'move') {\n        api.post('/moveFolder', {\n          source: pathCopy,\n          dest: path\n        });\n      }\n    }\n  }, [back]);\n  useEffect(function () {\n    copy();\n  }, [back]);\n\n  function pathRaplace() {\n    var array = path.split('/');\n    array.shift();\n    return array;\n  }\n\n  return _jsxs(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(StatusBar, {\n      style: \"light\"\n    }), _jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.textHeader,\n        children: \"Folder Manager\"\n      }), _jsx(View, {\n        style: styles.viewPath,\n        children: (_pathRaplace = pathRaplace()) == null ? void 0 : _pathRaplace.map(function (path, index) {\n          return _jsxs(Text, {\n            style: index === pathRaplace().length - 1 ? styles.textPathLast : styles.textPath,\n            children: [path, \" \", index === pathRaplace().length - 1 ? \"\" : '> ']\n          }, index);\n        })\n      })]\n    }), _jsx(ScrollFolder, {\n      folder: dir.folder,\n      path: path\n    }), _jsx(View, {\n      style: styles.content,\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          navigation.navigate('Manager');\n          setBack(!back);\n        },\n        style: styles.btnCopy,\n        children: moveORCopy === 'copy' ? _jsx(Text, {\n          style: styles.textButton,\n          children: \"Copy for here\"\n        }) : _jsx(Text, {\n          style: styles.textButton,\n          children: \"Move for here\"\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  header: {\n    padding: 30,\n    paddingBottom: 10,\n    backgroundColor: \"#00BFFF\",\n    borderBottomColor: '#808080',\n    borderWidth: 1\n  },\n  textHeader: {\n    color: '#DCDCDC',\n    textAlign: 'center',\n    fontSize: 25,\n    marginTop: 20,\n    fontWeight: 'bold'\n  },\n  viewPath: {\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  textPath: {\n    color: '#ffff',\n    marginRight: 3\n  },\n  content: {\n    display: 'flex',\n    alignItems: \"center\",\n    borderWidth: StyleSheet.hairlineWidth,\n    padding: 10,\n    marginTop: 15\n  },\n  btnCopy: {\n    backgroundColor: \"#00BFFF\",\n    borderRadius: 30,\n    padding: 9,\n    width: 390\n  },\n  textButton: {\n    textAlign: 'center',\n    color: '#FFFAFA',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["/home/placido/√Årea de Trabalho/projects/tcc/APP/src/screens/Copy/index.js"],"names":["React","useState","useEffect","useContext","useCallback","StatusBar","useNavigation","ScrollFolder","PathContext","api","Copy","route","navigation","dir","setDir","path","setPath","back","setBack","pathCopy","moveORCopy","params","folderName","undefined","get","then","data","post","f","copy","source","dest","pathRaplace","array","split","shift","flex","styles","header","textHeader","viewPath","map","index","length","textPathLast","textPath","folder","content","navigate","btnCopy","textButton","StyleSheet","create","padding","paddingBottom","backgroundColor","borderBottomColor","borderWidth","color","textAlign","fontSize","marginTop","fontWeight","display","flexDirection","marginRight","alignItems","hairlineWidth","borderRadius","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useCallback } from \"react\";\nimport { StatusBar } from \"expo-status-bar\"\nimport { StyleSheet, Text, SafeAreaView, View, TouchableOpacity } from \"react-native\"\nimport { useNavigation } from '@react-navigation/native';\n\nimport ScrollFolder from \"../../Components/ScrollFolder\";\nimport { PathContext } from \"../../context/PathContext\";\nimport api from '../../API'\n\nexport default function Copy({ route }) {\n    const navigation = useNavigation()\n    const [dir, setDir] = useState('')\n    const [path, setPath] = useState('')\n    const [back, setBack] = useState(false)\n\n    const { pathCopy, moveORCopy } = useContext(PathContext)\n\n    if (route?.params?.folderName === undefined) {\n        useEffect(() => {\n            api.get('/main').then(({ data }) => {\n                setPath(data.path)\n                api.post('/', { path: data.path }).then(({ data }) => {\n                    setDir(data)\n                })\n            })\n        }, [])\n    } else {\n        useEffect(() => {\n            setPath(route?.params?.path.path + '/' + route?.params?.folderName.f)\n            api.post('/', { path: route?.params?.path.path + '/' + route?.params?.folderName.f }).then(({ data }) => {\n                setDir(data)\n            })\n        }, [path])\n    }\n\n    const copy = useCallback(() => {\n        if (back === true) {\n            if (moveORCopy === 'copy') {\n                api.post('/copyFolder', { source: pathCopy, dest: path })\n            }\n            if (moveORCopy === 'move') {\n                api.post('/moveFolder', { source: pathCopy, dest: path })\n            }\n        }\n    }, [back])\n\n\n    useEffect(() => {\n        copy()\n    }, [back])\n\n    function pathRaplace() {\n        let array = path.split('/')\n        array.shift()\n        return array\n    }\n\n    return (\n        <SafeAreaView style={{ flex: 1 }}>\n            <StatusBar style=\"light\" />\n            <View style={styles.header}>\n                <Text style={styles.textHeader}>Folder Manager</Text>\n                < View style={styles.viewPath} >\n                    {\n                        pathRaplace()?.map((path, index) => (\n                            <Text\n                                key={index}\n                                style={\n                                    (index === pathRaplace().length - 1) ? styles.textPathLast : styles.textPath}>\n                                {path} {(index === pathRaplace().length - 1) ? \"\" : '> '}\n                            </Text>\n                        ))\n                    }\n                </View>\n            </View >\n            <ScrollFolder folder={dir.folder} path={path} />\n            <View style={styles.content}>\n                <TouchableOpacity onPress={() => {\n                    navigation.navigate('Manager')\n                    setBack(!back)\n                }} style={styles.btnCopy}>\n                    {\n                        moveORCopy === 'copy'\n                            ?\n                            (\n                                <Text style={styles.textButton}>\n                                    Copy for here\n                                </Text>\n                            )\n                            :\n                            (\n                                <Text style={styles.textButton}>\n                                    Move for here\n                                </Text>\n                            )\n                    }\n                </TouchableOpacity>\n            </View>\n        </SafeAreaView >\n    )\n}\n\nconst styles = StyleSheet.create({\n    header: {\n        padding: 30,\n        paddingBottom: 10,\n        backgroundColor: \"#00BFFF\",\n        borderBottomColor: '#808080',\n        borderWidth: 1,\n    },\n    textHeader: {\n        color: '#DCDCDC',\n        textAlign: 'center',\n        fontSize: 25,\n        marginTop: 20,\n        fontWeight: 'bold',\n    },\n    viewPath: {\n        display: 'flex',\n        flexDirection: 'row',\n\n    },\n    textPath: {\n        color: '#ffff',\n        marginRight: 3\n    },\n    content: {\n        display: 'flex',\n        alignItems: \"center\",\n        borderWidth: StyleSheet.hairlineWidth,\n        padding:10,\n        marginTop: 15\n    },\n    btnCopy: {\n        backgroundColor: \"#00BFFF\",\n        borderRadius: 30,\n        padding: 9,\n        width:390\n\n    },\n    textButton: {\n        textAlign: 'center',\n        color: '#FFFAFA',\n        fontWeight: 'bold'\n    }\n})"]},"metadata":{},"sourceType":"module"}