{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport api from \"../../API\";\nimport file from \"../../image/file-solid.png\";\nimport folder from \"../../image/folder-solid.png\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Details(_ref) {\n  var _route$params7;\n\n  var route = _ref.route;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      details = _useState2[0],\n      setDetails = _useState2[1];\n\n  var fileORFolder = useCallback(function () {\n    var _route$params, _route$params4;\n\n    if ((route == null ? void 0 : (_route$params = route.params) == null ? void 0 : _route$params.fileORFolder) === 'folder') {\n      var _route$params2, _route$params3;\n\n      api.post('/detailFolder', {\n        path: route == null ? void 0 : (_route$params2 = route.params) == null ? void 0 : _route$params2.path,\n        name: route == null ? void 0 : (_route$params3 = route.params) == null ? void 0 : _route$params3.folder\n      }).then(function (_ref2) {\n        var data = _ref2.data;\n        var dt = JSON.parse(data);\n        setDetails(dt.files);\n      });\n    }\n\n    if ((route == null ? void 0 : (_route$params4 = route.params) == null ? void 0 : _route$params4.fileORFolder) === 'file') {\n      var _route$params5, _route$params6;\n\n      api.post('/detailFile', {\n        path: (route == null ? void 0 : (_route$params5 = route.params) == null ? void 0 : _route$params5.path) + '/' + (route == null ? void 0 : (_route$params6 = route.params) == null ? void 0 : _route$params6.file)\n      }).then(function (_ref3) {\n        var data = _ref3.data;\n        setDetails(data);\n      });\n    }\n  }, []);\n  useEffect(function () {\n    fileORFolder();\n  }, []);\n  return _jsxs(SafeAreaView, {\n    children: [(route == null ? void 0 : (_route$params7 = route.params) == null ? void 0 : _route$params7.fileORFolder) === 'folder' ? _jsx(View, {\n      style: styles.container,\n      children: _jsx(Image, {\n        style: styles.imgFolder,\n        source: folder\n      })\n    }) : _jsx(View, {\n      style: styles.container,\n      children: _jsx(Image, {\n        style: styles.imgFile,\n        source: file\n      })\n    }), _jsxs(View, {\n      children: [_jsxs(Text, {\n        children: [\"Name: \", details.name]\n      }), _jsxs(Text, {\n        children: [\"Local: \", details.local]\n      }), _jsxs(Text, {\n        children: [\"Created: \", details.created]\n      }), _jsxs(Text, {\n        children: [\"Modified: \", details.modified]\n      }), _jsxs(Text, {\n        children: [\"Size: \", details.size]\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    backgroundColor: \"#00BFFF\"\n  },\n  imgFile: {\n    height: 200,\n    width: 150,\n    margin: 50\n  },\n  imgFolder: {\n    height: 180,\n    width: 200,\n    margin: 50\n  }\n});","map":{"version":3,"sources":["/home/placido/Área de Trabalho/projects/tcc/APP/src/screens/Detail/index.js"],"names":["React","useEffect","useState","useCallback","api","file","folder","Details","route","details","setDetails","fileORFolder","params","post","path","name","then","data","dt","JSON","parse","files","styles","container","imgFolder","imgFile","local","created","modified","size","StyleSheet","create","alignItems","backgroundColor","height","width","margin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport { StyleSheet, SafeAreaView, View, Image, Text } from \"react-native\"\nimport api from '../../API'\nimport file from '../../image/file-solid.png'\nimport folder from '../../image/folder-solid.png'\n\nexport default function Details({ route }) {\n    const [details, setDetails] = useState({})\n\n    const fileORFolder = useCallback(() => {\n        if (route?.params?.fileORFolder === 'folder') {\n            api.post('/detailFolder', { path: route?.params?.path, name: route?.params?.folder }).then(({ data }) => {\n                const dt = JSON.parse(data)\n                setDetails(dt.files)\n            })\n        } if (route?.params?.fileORFolder === 'file') {\n            api.post('/detailFile', { path: route?.params?.path + '/' + route?.params?.file }).then(({ data }) => {\n                setDetails(data)\n            })\n        }\n    }, [])\n\n    useEffect(() => {\n        fileORFolder()\n    }, [])\n\n    return (\n        <SafeAreaView>\n            {\n                route?.params?.fileORFolder === 'folder' ?\n                    (\n                        <View style={styles.container}>\n                            <Image style={styles.imgFolder} source={folder} />\n                        </View>\n                    ):\n                    (\n                        <View style={styles.container}>\n                            <Image style={styles.imgFile} source={file} />\n                        </View>\n                    )\n\n            }\n            <View>\n                <Text>Name: {details.name}</Text>\n                <Text>Local: {details.local}</Text>\n                <Text>Created: {details.created}</Text>\n                <Text>Modified: {details.modified}</Text>\n                <Text>Size: {details.size}</Text>\n            </View>\n        </SafeAreaView>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        alignItems: \"center\",\n        backgroundColor: \"#00BFFF\"\n    },\n    imgFile: {\n        height: 200,\n        width: 150,\n        margin: 50\n    },\n    imgFolder: {\n        height: 180,\n        width: 200,\n        margin: 50\n    },\n})"]},"metadata":{},"sourceType":"module"}