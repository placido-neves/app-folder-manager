{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Scroll from \"../../Components/Scroll\";\nimport MainDrop from \"../../Components/MainDrop\";\nimport reload from \"../../image/refresh.png\";\nimport more from \"../../image/more.png\";\nimport lupa from \"../../image/lupa.png\";\nimport api from \"../../API\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function Manager(_ref) {\n  var _route$params, _pathRaplace;\n\n  var route = _ref.route;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      dir = _useState2[0],\n      setDir = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      path = _useState4[0],\n      setPath = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      update = _useState6[0],\n      setUpdate = _useState6[1];\n\n  var modalizeRef = useRef(null);\n\n  if ((route == null ? void 0 : (_route$params = route.params) == null ? void 0 : _route$params.folderName) === undefined) {\n    useEffect(function () {\n      api.get('/main').then(function (_ref2) {\n        var data = _ref2.data;\n        setPath(data.path);\n        api.post('/', {\n          path: data.path\n        }).then(function (_ref3) {\n          var data = _ref3.data;\n          setDir(data);\n        });\n      });\n\n      if (update === true) {\n        setUpdate(false);\n      }\n    }, [path, update]);\n  } else {\n    useEffect(function () {\n      var _route$params2, _route$params3, _route$params4, _route$params5;\n\n      setPath((route == null ? void 0 : (_route$params2 = route.params) == null ? void 0 : _route$params2.path.path) + '/' + (route == null ? void 0 : (_route$params3 = route.params) == null ? void 0 : _route$params3.folderName.f));\n      api.post('/', {\n        path: (route == null ? void 0 : (_route$params4 = route.params) == null ? void 0 : _route$params4.path.path) + '/' + (route == null ? void 0 : (_route$params5 = route.params) == null ? void 0 : _route$params5.folderName.f)\n      }).then(function (_ref4) {\n        var data = _ref4.data;\n        setDir(data);\n      });\n\n      if (update === true) {\n        setUpdate(false);\n      }\n    }, [path, update]);\n  }\n\n  function pathRaplace() {\n    var array = path.split('/');\n    array.shift();\n    return array;\n  }\n\n  return _jsx(_Fragment, {\n    children: _jsxs(SafeAreaView, {\n      style: {\n        flex: 1\n      },\n      children: [_jsx(StatusBar, {\n        style: \"light\"\n      }), _jsxs(View, {\n        style: styles.header,\n        children: [_jsxs(View, {\n          style: {\n            padding: 10,\n            display: \"flex\",\n            flexDirection: \"row\",\n            marginTop: 20\n          },\n          children: [_jsx(Text, {\n            style: styles.txtHeader,\n            children: \"Folder Manager\"\n          }), _jsx(TouchableOpacity, {\n            children: _jsx(Image, {\n              style: styles.imgLupa,\n              source: lupa\n            })\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              setUpdate(true);\n            },\n            children: _jsx(Image, {\n              style: styles.imgReload,\n              source: reload\n            })\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              var _modalizeRef$current;\n\n              (_modalizeRef$current = modalizeRef.current) == null ? void 0 : _modalizeRef$current.open();\n            },\n            children: _jsx(Image, {\n              style: styles.imgDot,\n              source: more\n            })\n          })]\n        }), _jsx(View, {\n          style: styles.viewPath,\n          children: (_pathRaplace = pathRaplace()) == null ? void 0 : _pathRaplace.map(function (path, index) {\n            return _jsxs(Text, {\n              style: index === pathRaplace().length - 1 ? styles.textPathLast : styles.textPath,\n              children: [path, \" \", index === pathRaplace().length - 1 ? \"\" : '> ']\n            }, index);\n          })\n        })]\n      }), _jsx(Scroll, {\n        file: dir.file,\n        folder: dir.folder,\n        path: path,\n        setUpdate: setUpdate\n      }), _jsx(MainDrop, {\n        mod: modalizeRef\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  header: {\n    padding: 10,\n    paddingBottom: 10,\n    backgroundColor: \"#00BFFF\",\n    borderBottomColor: '#808080',\n    borderWidth: 1\n  },\n  txtHeader: {\n    fontSize: 25,\n    width: 250,\n    color: '#ffffff',\n    marginTop: 5,\n    fontWeight: 'bold'\n  },\n  loginInput: {\n    fontSize: 20,\n    width: 250,\n    color: '#ffffff'\n  },\n  imgReload: {\n    width: 24,\n    height: 24,\n    marginTop: 13,\n    marginLeft: 17\n  },\n  imgLupa: {\n    width: 20,\n    height: 20,\n    marginTop: 15\n  },\n  imgDot: {\n    width: 31,\n    height: 31,\n    marginTop: 9,\n    marginLeft: 12,\n    padding: 10\n  },\n  viewPath: {\n    display: 'flex',\n    flexDirection: 'row',\n    position: 'relative'\n  },\n  textPath: {\n    color: '#ffff',\n    marginRight: 3\n  },\n  textPathLast: {\n    color: '#000000',\n    marginRight: 3\n  }\n});","map":{"version":3,"sources":["/home/placido/√Årea de Trabalho/projects/tcc/APP/src/screens/Manager/index.js"],"names":["React","useState","useEffect","useRef","StatusBar","Scroll","MainDrop","reload","more","lupa","api","Manager","route","dir","setDir","path","setPath","update","setUpdate","modalizeRef","params","folderName","undefined","get","then","data","post","f","pathRaplace","array","split","shift","flex","styles","header","padding","display","flexDirection","marginTop","txtHeader","imgLupa","imgReload","current","open","imgDot","viewPath","map","index","length","textPathLast","textPath","file","folder","StyleSheet","create","paddingBottom","backgroundColor","borderBottomColor","borderWidth","fontSize","width","color","fontWeight","loginInput","height","marginLeft","position","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { StatusBar } from \"expo-status-bar\"\nimport { StyleSheet, Text, SafeAreaView, View, TouchableOpacity, Image, TextInput, TouchableWithoutFeedback } from \"react-native\"\n\n\nimport Scroll from \"../../Components/Scroll\";\nimport MainDrop from \"../../Components/MainDrop\";\n\n\nimport reload from '../../image/refresh.png'\nimport more from '../../image/more.png'\nimport lupa from '../../image/lupa.png'\n\nimport api from '../../API'\n\nexport default function Manager({ route }) {\n    const [dir, setDir] = useState('')\n    const [path, setPath] = useState('')\n    const [update, setUpdate] = useState(false)\n\n    const modalizeRef = useRef(null)\n\n    if (route?.params?.folderName === undefined) {\n        useEffect(() => {\n            api.get('/main').then(({ data }) => {\n                setPath(data.path)\n                api.post('/', { path: data.path }).then(({ data }) => {\n                    setDir(data)\n                })\n            })\n            if (update === true) {\n                setUpdate(false)\n            }\n        }, [path, update])\n    } else {\n        useEffect(() => {\n            setPath(route?.params?.path.path + '/' + route?.params?.folderName.f)\n            api.post('/', { path: route?.params?.path.path + '/' + route?.params?.folderName.f }).then(({ data }) => {\n                setDir(data)\n            })\n            if (update === true) {\n                setUpdate(false)\n            }\n        }, [path,update])\n    }\n\n\n    function pathRaplace() {\n        let array = path.split('/')\n        array.shift()\n        return array\n    }\n\n    return (\n        <>\n            <SafeAreaView style={{ flex: 1 }}>\n                <StatusBar style=\"light\" />\n                <View style={styles.header}>\n                    <View style={{ padding: 10, display: \"flex\", flexDirection: \"row\", marginTop: 20 }}>\n                        <Text style={styles.txtHeader}>Folder Manager</Text>\n                        <TouchableOpacity>\n                            <Image style={styles.imgLupa} source={lupa} />\n                        </TouchableOpacity>\n                        <TouchableOpacity onPress={() => {\n                            setUpdate(true)\n                        }}>\n                            <Image style={styles.imgReload} source={reload} />\n                        </TouchableOpacity>\n                        <TouchableOpacity onPress={() => {\n                            modalizeRef.current?.open()\n                        }}>\n                            <Image style={styles.imgDot} source={more} />\n                        </TouchableOpacity>\n                    </View>\n                    < View style={styles.viewPath} >\n                        {\n                            pathRaplace()?.map((path, index) => (\n                                <Text\n                                    key={index}\n                                    style={\n                                        (index === pathRaplace().length - 1) ? styles.textPathLast : styles.textPath}>\n                                    {path} {(index === pathRaplace().length - 1) ? \"\" : '> '}\n                                </Text>\n                            ))\n                        }\n                    </View>\n                </View >\n                <Scroll file={dir.file} folder={dir.folder} path={path} setUpdate={setUpdate}></Scroll>\n                <MainDrop mod={modalizeRef}></MainDrop>\n            </SafeAreaView>\n        </>\n    )\n}\n\nconst styles = StyleSheet.create({\n    header: {\n        padding: 10,\n        paddingBottom: 10,\n        backgroundColor: \"#00BFFF\",\n        borderBottomColor: '#808080',\n        borderWidth: 1,\n    },\n    txtHeader: {\n        fontSize: 25,\n        width: 250,\n        color: '#ffffff',\n        marginTop: 5,\n        fontWeight: 'bold'\n    },\n    loginInput: {\n        fontSize: 20,\n        width: 250,\n        color: '#ffffff'\n    },\n    imgReload: {\n        width: 24,\n        height: 24,\n        marginTop: 13,\n        marginLeft: 17\n    },\n    imgLupa: {\n        width: 20,\n        height: 20,\n        marginTop: 15,\n    },\n    imgDot: {\n        width: 31,\n        height: 31,\n        marginTop: 9,\n        marginLeft: 12,\n        padding: 10\n    },\n    viewPath: {\n        display: 'flex',\n        flexDirection: 'row',\n        position: 'relative'\n    },\n    textPath: {\n        color: '#ffff',\n        marginRight: 3\n    },\n    textPathLast: {\n        color: '#000000',\n        marginRight: 3\n    }\n})\n\n//<TextInput style={styles.loginInput} placeholder=\"Folder Manager\" ></TextInput>"]},"metadata":{},"sourceType":"module"}