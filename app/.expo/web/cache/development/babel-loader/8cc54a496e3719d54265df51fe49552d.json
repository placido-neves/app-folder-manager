{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { StatusBar } from \"expo-status-bar\";\nimport fileImage from \"../../image/file-solid.png\";\nimport folderImage from \"../../image/folder-solid.png\";\nimport api from \"../../API\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Manager() {\n  var _pathRaplace, _dir$folder, _dir$file;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      path = _useState2[0],\n      setPath = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dir = _useState4[0],\n      setDir = _useState4[1];\n\n  useEffect(function () {\n    api.get('/main').then(function (_ref) {\n      var data = _ref.data;\n      setPath(data.path);\n      api.post('/', {\n        path: data.path\n      }).then(function (_ref2) {\n        var data = _ref2.data;\n        setDir(data);\n      });\n    });\n  }, []);\n\n  function pathRaplace() {\n    var array = path.split('/');\n    array.shift();\n    return array;\n  }\n\n  return _jsxs(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(StatusBar, {\n      style: \"light\"\n    }), _jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.textHeader,\n        children: \"Folder Manager\"\n      }), _jsx(View, {\n        style: styles.viewPath,\n        children: (_pathRaplace = pathRaplace()) == null ? void 0 : _pathRaplace.map(function (path, index) {\n          return _jsxs(Text, {\n            style: index === pathRaplace().length - 1 ? styles.textPathLast : styles.textPath,\n            children: [path, \" \", index === pathRaplace().length - 1 ? \"\" : '> ']\n          }, index);\n        })\n      })]\n    }), _jsx(ScrollView, {\n      style: {\n        flex: 1\n      },\n      scrollEventThrottle: 100,\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [(_dir$folder = dir.folder) == null ? void 0 : _dir$folder.map(function (f, index) {\n          return _jsxs(TouchableOpacity, {\n            style: styles.btnData,\n            children: [_jsx(Image, {\n              source: folderImage\n            }, index), _jsxs(Text, {\n              children: [\" \", f]\n            }, index)]\n          }, index);\n        }), (_dir$file = dir.file) == null ? void 0 : _dir$file.map(function (f, index) {\n          return _jsxs(TouchableOpacity, {\n            style: styles.btnData,\n            children: [_jsx(Image, {\n              style: styles.image,\n              source: fileImage\n            }, index), _jsx(Text, {\n              children: f\n            }, index)]\n          }, index);\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  header: {\n    padding: 30,\n    paddingBottom: 10,\n    backgroundColor: \"#00BFFF\",\n    borderBottomColor: '#808080',\n    borderWidth: 1\n  },\n  textHeader: {\n    color: '#DCDCDC',\n    textAlign: 'center',\n    fontSize: 25,\n    marginTop: 20,\n    fontWeight: 'bold'\n  },\n  viewPath: {\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  textPath: {\n    color: '#ffff',\n    marginRight: 3\n  },\n  textPathLast: {\n    color: '#41788C',\n    borderBottomColor: '#41788C',\n    borderBottomWidth: 1,\n    paddingLeft: 3,\n    paddingBottom: 2\n  },\n  container: {\n    backgroundColor: '#808080'\n  },\n  btnData: {\n    borderTopColor: '#808080',\n    borderBottomColor: '#808080',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    marginBottom: 1,\n    backgroundColor: '#ffffff',\n    padding: 30\n  },\n  image: {\n    width: 15,\n    height: 20\n  }\n});","map":{"version":3,"sources":["/home/placido/Área de Trabalho/tcc/APP/src/screens/Manager/index.js"],"names":["React","useState","useEffect","StatusBar","fileImage","folderImage","api","Manager","path","setPath","dir","setDir","get","then","data","post","pathRaplace","array","split","shift","flex","styles","header","textHeader","viewPath","map","index","length","textPathLast","textPath","container","folder","f","btnData","file","image","StyleSheet","create","padding","paddingBottom","backgroundColor","borderBottomColor","borderWidth","color","textAlign","fontSize","marginTop","fontWeight","display","flexDirection","marginRight","borderBottomWidth","paddingLeft","borderTopColor","hairlineWidth","borderTopWidth","marginBottom","width","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;;AAEA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,SAAP;AACA,OAAOC,WAAP;AACA,OAAOC,GAAP;;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAC9B,kBAAwBN,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOO,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAsBR,QAAQ,CAAC,EAAD,CAA9B;AAAA;AAAA,MAAOS,GAAP;AAAA,MAAYC,MAAZ;;AAEAT,EAAAA,SAAS,CAAC,YAAM;AACZI,IAAAA,GAAG,CAACM,GAAJ,CAAQ,OAAR,EAAiBC,IAAjB,CAAsB,gBAAc;AAAA,UAAXC,IAAW,QAAXA,IAAW;AAChCL,MAAAA,OAAO,CAACK,IAAI,CAACN,IAAN,CAAP;AAEAF,MAAAA,GAAG,CAACS,IAAJ,CAAS,GAAT,EAAc;AAAEP,QAAAA,IAAI,EAAEM,IAAI,CAACN;AAAb,OAAd,EAAmCK,IAAnC,CAAwC,iBAAc;AAAA,YAAXC,IAAW,SAAXA,IAAW;AAClDH,QAAAA,MAAM,CAACG,IAAD,CAAN;AACH,OAFD;AAGH,KAND;AAOH,GARQ,EAQN,EARM,CAAT;;AAUA,WAASE,WAAT,GAAuB;AACnB,QAAIC,KAAK,GAAGT,IAAI,CAACU,KAAL,CAAW,GAAX,CAAZ;AACAD,IAAAA,KAAK,CAACE,KAAN;AACA,WAAOF,KAAP;AACH;;AAED,SACI,MAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAArB;AAAA,eACI,KAAC,SAAD;AAAW,MAAA,KAAK,EAAC;AAAjB,MADJ,EAEI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,MAApB;AAAA,iBACI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,UAApB;AAAA;AAAA,QADJ,EAEI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,QAApB;AAAA,kCAEQR,WAAW,EAFnB,qBAEQ,aAAeS,GAAf,CAAmB,UAACjB,IAAD,EAAOkB,KAAP;AAAA,iBACf,MAAC,IAAD;AAEI,YAAA,KAAK,EACAA,KAAK,KAAKV,WAAW,GAAGW,MAAd,GAAuB,CAAlC,GAAuCN,MAAM,CAACO,YAA9C,GAA6DP,MAAM,CAACQ,QAH5E;AAAA,uBAIKrB,IAJL,OAIakB,KAAK,KAAKV,WAAW,GAAGW,MAAd,GAAuB,CAAlC,GAAuC,EAAvC,GAA4C,IAJxD;AAAA,aACSD,KADT,CADe;AAAA,SAAnB;AAFR,QAFJ;AAAA,MAFJ,EAiBI,KAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAAEN,QAAAA,IAAI,EAAE;AAAR,OAAnB;AAAgC,MAAA,mBAAmB,EAAE,GAArD;AAAA,gBACI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACS,SAApB;AAAA,kCAEQpB,GAAG,CAACqB,MAFZ,qBAEQ,YAAYN,GAAZ,CAAgB,UAACO,CAAD,EAAIN,KAAJ;AAAA,iBACZ,MAAC,gBAAD;AAAkB,YAAA,KAAK,EAAEL,MAAM,CAACY,OAAhC;AAAA,uBACI,KAAC,KAAD;AAAmB,cAAA,MAAM,EAAE5B;AAA3B,eAAYqB,KAAZ,CADJ,EAEI,MAAC,IAAD;AAAA,8BAAoBM,CAApB;AAAA,eAAWN,KAAX,CAFJ;AAAA,aAA8CA,KAA9C,CADY;AAAA,SAAhB,CAFR,eAWQhB,GAAG,CAACwB,IAXZ,qBAWQ,UAAUT,GAAV,CAAc,UAACO,CAAD,EAAIN,KAAJ;AAAA,iBACV,MAAC,gBAAD;AAAkB,YAAA,KAAK,EAAEL,MAAM,CAACY,OAAhC;AAAA,uBACI,KAAC,KAAD;AAAO,cAAA,KAAK,EAAGZ,MAAM,CAACc,KAAtB;AAAyC,cAAA,MAAM,EAAE/B;AAAjD,eAAkCsB,KAAlC,CADJ,EAEI,KAAC,IAAD;AAAA,wBAAmBM;AAAnB,eAAWN,KAAX,CAFJ;AAAA,aAA8CA,KAA9C,CADU;AAAA,SAAd,CAXR;AAAA;AADJ,MAjBJ;AAAA,IADJ;AA0CH;AAED,IAAML,MAAM,GAAGe,UAAU,CAACC,MAAX,CAAkB;AAC7Bf,EAAAA,MAAM,EAAE;AACJgB,IAAAA,OAAO,EAAE,EADL;AAEJC,IAAAA,aAAa,EAAE,EAFX;AAGJC,IAAAA,eAAe,EAAE,SAHb;AAIJC,IAAAA,iBAAiB,EAAE,SAJf;AAKJC,IAAAA,WAAW,EAAE;AALT,GADqB;AAQ7BnB,EAAAA,UAAU,EAAE;AACRoB,IAAAA,KAAK,EAAE,SADC;AAERC,IAAAA,SAAS,EAAE,QAFH;AAGRC,IAAAA,QAAQ,EAAE,EAHF;AAIRC,IAAAA,SAAS,EAAE,EAJH;AAKRC,IAAAA,UAAU,EAAE;AALJ,GARiB;AAe7BvB,EAAAA,QAAQ,EAAE;AACNwB,IAAAA,OAAO,EAAE,MADH;AAENC,IAAAA,aAAa,EAAE;AAFT,GAfmB;AAmB7BpB,EAAAA,QAAQ,EAAE;AACNc,IAAAA,KAAK,EAAE,OADD;AAENO,IAAAA,WAAW,EAAE;AAFP,GAnBmB;AAuB7BtB,EAAAA,YAAY,EAAE;AACVe,IAAAA,KAAK,EAAE,SADG;AAEVF,IAAAA,iBAAiB,EAAE,SAFT;AAGVU,IAAAA,iBAAiB,EAAE,CAHT;AAIVC,IAAAA,WAAW,EAAE,CAJH;AAKVb,IAAAA,aAAa,EAAE;AALL,GAvBe;AA8B7BT,EAAAA,SAAS,EAAE;AACPU,IAAAA,eAAe,EAAE;AADV,GA9BkB;AAiC7BP,EAAAA,OAAO,EAAE;AACLoB,IAAAA,cAAc,EAAE,SADX;AAELZ,IAAAA,iBAAiB,EAAE,SAFd;AAGLU,IAAAA,iBAAiB,EAAEf,UAAU,CAACkB,aAHzB;AAILC,IAAAA,cAAc,EAAEnB,UAAU,CAACkB,aAJtB;AAKLE,IAAAA,YAAY,EAAE,CALT;AAMLhB,IAAAA,eAAe,EAAE,SANZ;AAOLF,IAAAA,OAAO,EAAE;AAPJ,GAjCoB;AA0C7BH,EAAAA,KAAK,EAAE;AACHsB,IAAAA,KAAK,EAAC,EADH;AAEHC,IAAAA,MAAM,EAAC;AAFJ;AA1CsB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { StyleSheet, Text, SafeAreaView, View, TouchableOpacity, ScrollView, Image } from \"react-native\";\nimport { StatusBar } from \"expo-status-bar\"\nimport fileImage from '../../image/file-solid.png'\nimport folderImage from '../../image/folder-solid.png'\nimport api from '../../API'\n\nexport default function Manager() {\n    const [path, setPath] = useState('')\n    const [dir, setDir] = useState('')\n\n    useEffect(() => {\n        api.get('/main').then(({ data }) => {\n            setPath(data.path)\n\n            api.post('/', { path: data.path }).then(({ data }) => {\n                setDir(data)\n            })\n        })\n    }, [])\n\n    function pathRaplace() {\n        let array = path.split('/')\n        array.shift()\n        return array\n    }\n\n    return (\n        <SafeAreaView style={{ flex: 1 }}>\n            <StatusBar style=\"light\" />\n            <View style={styles.header}>\n                <Text style={styles.textHeader}>Folder Manager</Text>\n                <View style={styles.viewPath}>\n                    {\n                        pathRaplace()?.map((path, index) => (\n                            <Text\n                                key={index}\n                                style={\n                                    (index === pathRaplace().length - 1) ? styles.textPathLast : styles.textPath}>\n                                {path} {(index === pathRaplace().length - 1) ? \"\" : '> '}\n                            </Text>\n                        ))\n                    }\n                </View>\n            </View >\n            <ScrollView style={{ flex: 1 }} scrollEventThrottle={100} >\n                <View style={styles.container}>\n                    {\n                        dir.folder?.map((f, index) => (\n                            <TouchableOpacity style={styles.btnData} key={index}>\n                                <Image key={index} source={folderImage}></Image>\n                                <Text key={index}> {f}</Text>\n                            </TouchableOpacity>\n                        ))\n\n                    }\n                    {\n                        dir.file?.map((f, index) => (\n                            <TouchableOpacity style={styles.btnData} key={index}>\n                                <Image style ={styles.image} key={index} source={fileImage}></Image>\n                                <Text key={index}>{f}</Text>\n                            </TouchableOpacity>\n                        ))\n                    }\n\n                </View>\n            </ScrollView>\n        </SafeAreaView>\n    )\n}\n\nconst styles = StyleSheet.create({\n    header: {\n        padding: 30,\n        paddingBottom: 10,\n        backgroundColor: \"#00BFFF\",\n        borderBottomColor: '#808080',\n        borderWidth: 1,\n    },\n    textHeader: {\n        color: '#DCDCDC',\n        textAlign: 'center',\n        fontSize: 25,\n        marginTop: 20,\n        fontWeight: 'bold',\n    },\n    viewPath: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    textPath: {\n        color: '#ffff',\n        marginRight: 3\n    },\n    textPathLast: {\n        color: '#41788C',\n        borderBottomColor: '#41788C',\n        borderBottomWidth: 1,\n        paddingLeft: 3,\n        paddingBottom: 2\n    },\n    container: {\n        backgroundColor: '#808080'\n    },\n    btnData: {\n        borderTopColor: '#808080',\n        borderBottomColor: '#808080',\n        borderBottomWidth: StyleSheet.hairlineWidth,\n        borderTopWidth: StyleSheet.hairlineWidth,\n        marginBottom: 1,\n        backgroundColor: '#ffffff',\n        padding: 30\n    },\n    image: {\n        width:15,\n        height:20,\n    }\n})"]},"metadata":{},"sourceType":"module"}