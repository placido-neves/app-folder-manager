{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useRef, useState, useContext, useCallback, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { useNavigation } from '@react-navigation/native';\nimport Modal from 'react-native-modal';\nimport { NameContext } from \"../../context/NameContext\";\nimport FolderDrop from \"../FolderDrop\";\nimport FileDrop from \"../FileDrop\";\nimport api from \"../../API\";\nimport fileImage from \"../../image/file-solid.png\";\nimport folderImage from \"../../image/folder-solid.png\";\nimport dot from \"../../image/dot.png\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function Scroll(_ref) {\n  var folder = _ref.folder,\n      file = _ref.file,\n      path = _ref.path,\n      setUpdate = _ref.setUpdate;\n  var navigation = useNavigation();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      fl = _useState2[0],\n      setFl = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fd = _useState4[0],\n      setFd = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newName = _useState6[0],\n      setNewName = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      ok = _useState8[0],\n      setOk = _useState8[1];\n\n  var _useContext = useContext(NameContext),\n      name = _useContext.name,\n      isModalVisible = _useContext.isModalVisible,\n      toggleModal = _useContext.toggleModal,\n      setModalVisible = _useContext.setModalVisible;\n\n  var modalizeRefFile = useRef(null);\n  var modalizeRefPath = useRef(null);\n  var newNameFunction = useCallback(function () {\n    if (ok === true) {\n      api.put('/renameFolder', {\n        path: path,\n        name: name,\n        newName: newName\n      });\n      setUpdate(true);\n    }\n  }, [ok]);\n  useEffect(function () {\n    newNameFunction();\n    setOk(false);\n  }, [ok]);\n  return _jsxs(_Fragment, {\n    children: [_jsx(ScrollView, {\n      style: {\n        flex: 1\n      },\n      scrollEventThrottle: 100,\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [folder == null ? void 0 : folder.map(function (f, index) {\n          return _jsxs(View, {\n            children: [_jsxs(Pressable, {\n              onPress: function onPress() {\n                navigation.push('Manager', {\n                  folderName: {\n                    f: f\n                  },\n                  path: {\n                    path: path\n                  }\n                });\n              },\n              style: {\n                flexDirection: 'row'\n              },\n              children: [_jsx(Image, {\n                style: styles.imgFolder,\n                source: folderImage\n              }, index + \"fl5\"), _jsx(View, {\n                style: styles.containerFlex,\n                children: _jsx(Text, {\n                  style: styles.txtBnt,\n                  children: f\n                })\n              }, index + \"fl4\")]\n            }, index + \"fl2\"), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                var _modalizeRefPath$curr;\n\n                (_modalizeRefPath$curr = modalizeRefPath.current) == null ? void 0 : _modalizeRefPath$curr.open();\n                setFd(f);\n              },\n              style: styles.dotPosition,\n              children: _jsx(Image, {\n                style: styles.imgDot,\n                source: dot\n              }, index + \"fl5\")\n            }, index + \"fl3\")]\n          }, index + \"fl1\");\n        }), file == null ? void 0 : file.map(function (f, index) {\n          return _jsxs(View, {\n            children: [_jsxs(Pressable, {\n              style: {\n                flexDirection: 'row'\n              },\n              children: [_jsx(Image, {\n                style: styles.imgFile,\n                source: fileImage\n              }, index + \"fl5\"), _jsx(View, {\n                style: styles.containerFlex,\n                children: _jsx(Text, {\n                  style: styles.txtBnt,\n                  children: f\n                })\n              }, index + \"fl4\")]\n            }, index + \"fl2\"), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                var _modalizeRefFile$curr;\n\n                (_modalizeRefFile$curr = modalizeRefFile.current) == null ? void 0 : _modalizeRefFile$curr.open();\n                setFl(f);\n              },\n              style: styles.dotPosition,\n              children: _jsx(Image, {\n                style: styles.imgDot,\n                source: dot\n              }, index + \"fl5\")\n            }, index + \"fl3\")]\n          }, index + \"fl1\");\n        })]\n      })\n    }), _jsx(FileDrop, {\n      mod: modalizeRefFile,\n      file: fl,\n      path: path\n    }), _jsx(FolderDrop, {\n      mod: modalizeRefPath,\n      folder: fd,\n      path: path\n    }), _jsx(Modal, {\n      isVisible: isModalVisible,\n      onBackdropPress: toggleModal,\n      children: _jsxs(View, {\n        style: {\n          backgroundColor: \"white\",\n          padding: 25,\n          borderRadius: 10\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 20,\n            textAlign: 'center',\n            marginBottom: 20\n          },\n          children: \"Rename\"\n        }), _jsx(TextInput, {\n          placeholder: \"New Name\",\n          style: {\n            borderColor: 'black',\n            borderWidth: 1,\n            borderRadius: 9,\n            padding: 20\n          },\n          onChangeText: function onChangeText(text) {\n            setNewName(text);\n          }\n        }), _jsxs(View, {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: 'space-evenly',\n            marginTop: 50,\n            marginBottom: 10\n          },\n          children: [_jsx(TouchableWithoutFeedback, {\n            onPress: function onPress() {\n              var _modalizeRefPath$curr2;\n\n              setOk(true);\n              setModalVisible(false);\n              (_modalizeRefPath$curr2 = modalizeRefPath.current) == null ? void 0 : _modalizeRefPath$curr2.close();\n            },\n            children: _jsx(Text, {\n              style: styles.btnOk,\n              children: \"ok\"\n            })\n          }), _jsx(TouchableWithoutFeedback, {\n            onPress: toggleModal,\n            children: _jsx(Text, {\n              style: styles.btnCancel,\n              children: \"Cancel\"\n            })\n          })]\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  containerFlex: {\n    flexDirection: \"row\",\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    flex: 1\n  },\n  imgFile: {\n    width: 20,\n    height: 25,\n    margin: 35\n  },\n  imgFolder: {\n    width: 25,\n    height: 20,\n    margin: 35\n  },\n  imgDot: {\n    width: 7,\n    height: 29,\n    backgroundColor: '#ffffff'\n  },\n  txtBnt: {\n    fontSize: 15,\n    marginTop: 30,\n    marginLeft: 10,\n    width: 250,\n    paddingBottom: 10\n  },\n  dotPosition: {\n    position: 'absolute',\n    left: 350,\n    padding: 35\n  },\n  btnOk: {\n    borderColor: 'black',\n    borderWidth: 1,\n    borderRadius: 30,\n    padding: 9,\n    width: 100,\n    textAlign: \"center\"\n  },\n  btnCancel: {\n    borderColor: 'black',\n    borderWidth: 1,\n    borderRadius: 30,\n    padding: 9,\n    width: 100,\n    textAlign: \"center\",\n    backgroundColor: 'black',\n    color: \"white\"\n  }\n});","map":{"version":3,"sources":["/home/placido/√Årea de Trabalho/projects/tcc/APP/src/Components/Scroll/index.js"],"names":["React","useRef","useState","useContext","useCallback","useEffect","useNavigation","Modal","NameContext","FolderDrop","FileDrop","api","fileImage","folderImage","dot","Scroll","folder","file","path","setUpdate","navigation","fl","setFl","fd","setFd","newName","setNewName","ok","setOk","name","isModalVisible","toggleModal","setModalVisible","modalizeRefFile","modalizeRefPath","newNameFunction","put","flex","styles","container","map","f","index","push","folderName","flexDirection","imgFolder","containerFlex","txtBnt","current","open","dotPosition","imgDot","imgFile","backgroundColor","padding","borderRadius","fontSize","textAlign","marginBottom","borderColor","borderWidth","text","display","justifyContent","marginTop","close","btnOk","btnCancel","StyleSheet","create","borderBottomWidth","hairlineWidth","width","height","margin","marginLeft","paddingBottom","position","left","color"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useContext, useCallback, useEffect } from \"react\";\nimport { StyleSheet, TouchableOpacity, ScrollView, Image, Pressable, View, Text, TextInput, TouchableWithoutFeedback } from 'react-native'\nimport { useNavigation } from '@react-navigation/native';\nimport Modal from 'react-native-modal'\n\nimport { NameContext } from \"../../context/NameContext\"\nimport FolderDrop from '../FolderDrop'\nimport FileDrop from '../FileDrop'\n\nimport api from '../../API'\n\nimport fileImage from '../../image/file-solid.png'\nimport folderImage from '../../image/folder-solid.png'\nimport dot from '../../image/dot.png'\n\nexport default function Scroll({ folder, file, path, setUpdate }) {\n    const navigation = useNavigation()\n\n    const [fl, setFl] = useState('')\n    const [fd, setFd] = useState('')\n    const [newName, setNewName] = useState('')\n\n    const [ok, setOk] = useState(false)\n\n    const { name, isModalVisible, toggleModal, setModalVisible } = useContext(NameContext)\n\n    const modalizeRefFile = useRef(null)\n    const modalizeRefPath = useRef(null)\n    \n    const newNameFunction = useCallback(() => {\n        if (ok === true) {\n            api.put('/renameFolder', { path: path, name: name, newName: newName })\n            setUpdate(true)\n        }\n    }, [ok])\n\n    useEffect(() => {\n        newNameFunction()\n        setOk(false)\n    }, [ok])\n\n    return (\n        <>\n            <ScrollView style={{ flex: 1 }} scrollEventThrottle={100} >\n                <View style={styles.container}>\n                    {\n                        folder?.map((f, index) => (\n                            <View key={index + \"fl1\"} >\n                                <Pressable onPress={() => {\n                                    navigation.push('Manager', {\n                                        folderName: { f },\n                                        path: { path }\n                                    })\n                                }} key={index + \"fl2\"} style={{ flexDirection: 'row' }}>\n                                    <Image key={index + \"fl5\"} style={styles.imgFolder} source={folderImage} />\n                                    <View key={index + \"fl4\"} style={styles.containerFlex}>\n                                        <Text style={styles.txtBnt}>{f}</Text>\n                                    </View>\n                                </Pressable>\n                                <TouchableOpacity onPress={() => {\n                                    modalizeRefPath.current?.open()\n                                    setFd(f)\n                                }\n                                } style={styles.dotPosition} key={index + \"fl3\"}>\n                                    <Image key={index + \"fl5\"} style={styles.imgDot} source={dot} />\n                                </TouchableOpacity>\n                            </View>\n                        ))\n                    }\n                    {\n                        file?.map((f, index) => (\n                            <View key={index + \"fl1\"} >\n                                <Pressable key={index + \"fl2\"} style={{ flexDirection: 'row' }}>\n                                    <Image key={index + \"fl5\"} style={styles.imgFile} source={fileImage} />\n                                    <View key={index + \"fl4\"} style={styles.containerFlex}>\n                                        <Text style={styles.txtBnt}>{f}</Text>\n                                    </View>\n                                </Pressable>\n                                <TouchableOpacity onPress={() => {\n                                    modalizeRefFile.current?.open()\n                                    setFl(f)\n                                }}\n                                    style={styles.dotPosition}\n                                    key={index + \"fl3\"}>\n                                    <Image key={index + \"fl5\"} style={styles.imgDot} source={dot} />\n                                </TouchableOpacity>\n                            </View>\n                        ))\n                    }\n                </View>\n            </ScrollView>\n\n            <FileDrop mod={modalizeRefFile} file={fl} path={path} />\n            <FolderDrop mod={modalizeRefPath} folder={fd} path={path} />\n\n            <Modal isVisible={isModalVisible} onBackdropPress={toggleModal}>\n                <View style={{ backgroundColor: \"white\", padding: 25, borderRadius: 10 }}>\n                    <Text style={{ fontSize: 20, textAlign: 'center', marginBottom: 20 }}>Rename</Text>\n                    <TextInput\n                        placeholder=\"New Name\"\n                        style={{ borderColor: 'black', borderWidth: 1, borderRadius: 9, padding: 20 }}\n                        onChangeText={(text) => { setNewName(text) }}\n                    />\n                    <View style={{ display: \"flex\", flexDirection: \"row\", justifyContent: 'space-evenly', marginTop: 50, marginBottom: 10 }}>\n                        <TouchableWithoutFeedback onPress={() => { setOk(true); setModalVisible(false); modalizeRefPath.current?.close() }}>\n                            <Text style={styles.btnOk}>ok</Text>\n                        </TouchableWithoutFeedback>\n                        <TouchableWithoutFeedback onPress={toggleModal}>\n                            <Text style={styles.btnCancel}>Cancel</Text>\n                        </TouchableWithoutFeedback>\n                    </View>\n                </View>\n            </Modal>\n        </>\n    )\n}\n\nconst styles = StyleSheet.create({\n    containerFlex: {\n        flexDirection: \"row\",\n        borderBottomWidth: StyleSheet.hairlineWidth,\n        flex: 1\n    },\n    imgFile: {\n        width: 20,\n        height: 25,\n        margin: 35,\n    },\n    imgFolder: {\n        width: 25,\n        height: 20,\n        margin: 35,\n    },\n    imgDot: {\n        width: 7,\n        height: 29,\n        backgroundColor: '#ffffff'\n    },\n    txtBnt: {\n        fontSize: 15,\n        marginTop: 30,\n        marginLeft: 10,\n        width: 250,\n        paddingBottom: 10\n    },\n    dotPosition: {\n        position: 'absolute',\n        left: 350,\n        padding: 35\n    },\n    btnOk: {\n        borderColor: 'black',\n        borderWidth: 1,\n        borderRadius: 30,\n        padding: 9,\n        width: 100,\n        textAlign: \"center\"\n    },\n    btnCancel: {\n        borderColor: 'black',\n        borderWidth: 1,\n        borderRadius: 30,\n        padding: 9,\n        width: 100,\n        textAlign: \"center\",\n        backgroundColor: 'black',\n        color: \"white\"\n    }\n})"]},"metadata":{},"sourceType":"module"}